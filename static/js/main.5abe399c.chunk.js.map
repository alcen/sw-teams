{"version":3,"sources":["TabType.ts","Classes.ts","util/Font.ts","panels/NarwhalPanel.tsx","panels/ChatPanel.tsx","pages/UserProfile.tsx","pages/TeamCard.tsx","pages/AllTeams.tsx","util/Action.ts","pages/ActivityCard.tsx","pages/TeamsPage.tsx","pages/Activity.tsx","pages/CreateTeamMenu.tsx","util/DataRenamer.ts","panels/ErrorScreen.tsx","panels/LoadingScreen.tsx","panels/TeamsPanel.tsx","panels/PeoplePanel.tsx","panels/StatisticsPanel.tsx","App.tsx","serviceWorker.ts","index.tsx","logo.svg","sw-logo-white.svg"],"names":["TabType","tabPanel","defaultFont","NarwhalPanel","props","logo","require","isShown","tabValue","selectedTab","Typography","component","role","className","Classes","hidden","style","fontFamily","src","alt","href","target","rel","undefined","ChatPanel","UserProfile","render","handleCloseMenu","setState","state","isOpen","anchorElement","display","paddingRight","variant","fontSize","lineHeight","color","mixBlendMode","opacity","paddingLeft","userToDisplay","name","Avatar","avatar","width","height","IconButton","onClick","event","currentTarget","Menu","anchorEl","keepMounted","open","onClose","MenuItem","React","TeamCard","team","displayedTeam","Card","marginLeft","marginRight","marginTop","border","boxShadow","isArchived","position","float","iconSource","createdAt","handleFavourite","isFavourite","marginBottom","wordWrap","WebkitLineClamp","WebkitBoxOrient","overflowY","description","Divider","top","numberOfCampaigns","numberOfLeads","Action","AllTeams","createFavouriteHandler","teamIndex","oldValue","teamsToDisplay","setFavouriteInTeamArray","index","updateTeams","map","teamCardConstructor","teamAndOriginalIndex","originalIndex","key","mode","searchTerm","teamCards","TeamPageTab","favourites","filter","teamPair","archived","search","toLowerCase","includes","paddingTop","paddingBottom","all","length","numberOfTotalTeams","alignItems","justifyContent","flexDirection","flexWrap","alignContent","ActivityCard","activity","displayedActivity","borderRadius","user","action","end","addedLeads","archivedTeam","increasedQuota","console","error","createActivityMessage","minWidth","minHeight","Activity","activityCards","activitiesToDisplay","CreateTeamMenu","clearState","hasTriedToSubmit","handleSubmit","newTeam","id","numberOfTeams","handleCreateTeam","Object","assign","prevState","handleChangeText","newValue","value","handleChangeBoolean","checked","handleChangeNumber","parseInt","isNaN","Backdrop","this","zIndex","backgroundColor","borderSpacing","colSpan","TextField","label","onChange","FormGroup","FormControlLabel","control","Checkbox","type","textAlign","Button","keysMap","activities","campaigns_count","created_at","image","is_archived","is_favorited","leads_count","notifications_count","person","teams","current_user","renameKeys","rawData","renamedObject","oldKeys","keys","i","currentKey","newKey","Array","array","newArray","ErrorScreen","LoadingScreen","CircularProgress","progress","size","thickness","updateProgress","updateData","a","fetch","response","json","loadedData","Error","TeamsPage","handleUpdateTeams","data","currentUser","handleChangeTab","handleSearch","previousTabBeforeSearch","defaultTab","handleClearSearch","handleAddTeam","isCreateTeam","addNewTeam","openCreateTeamMenu","closeCreateTeamMenu","loadProgress","unset","tabStyle","fontWeight","textTransform","didLoadingFail","unshift","loadJsonData","catch","AppBar","borderRight","Badge","badgeContent","notificationsCount","Tabs","TabIndicatorProps","Tab","InputBase","placeholder","TeamsPanel","PeoplePanel","StatisticsPanel","App","handleTabChange","handleHelpButtonClick","isBackdropOpen","handleOverlayClose","orientation","narwhal","icon","Icon","whaleLogo","aria-label","chat","people","statistics","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5abe399c.chunk.js","sourcesContent":["enum TabType {\n  narwhal = 'narwhal',\n  chat = 'chat',\n  teams = 'teams',\n  people = 'people',\n  statistics = 'statistics'\n}\n\nexport default TabType;","export const app = 'sw-app';\nexport const allTeams = 'sw-all-teams';\nexport const archivedTeam = 'sw-archived-team';\nexport const backdrop = 'sw-backdrop';\nexport const createTeamMenu = 'sw-create-team-menu';\nexport const helpIcon = 'sw-help-icon';\nexport const loadingScreen = 'sw-loading-screen';\nexport const normalTeam = 'sw-normal-team';\nexport const tabPanel = 'sw-tab-panel';\nexport const tabs = 'sw-tabs';\nexport const teamsPage = 'sw-teams-page';\nexport const teamsAllBars = 'sw-teams-all-bars';\nexport const teamsCreateBar = 'sw-teams-create-bar';\nexport const teamsCreateBarIcon = 'sw-teams-create-bar-icon';\nexport const teamsCreateATeam = 'sw-teams-create-bar-create-a-team';\nexport const teamsMain = 'sw-teams-main';\nexport const teamsTopBar = 'sw-teams-top-bar';\nexport const teamsTopUser = 'sw-teams-top-user';\nexport const teamsTopWords = 'sw-teams-top-words';\nexport const teamsTabBar = 'sw-teams-tab-bar';\nexport const teamsTabs = 'sw-teams-tabs';\nexport const teamsSearch = 'sw-teams-search';\n","const defaultFont = 'ProximaNova, Segoe UI, Roboto, Helvetica, Arial, sans-serif';\nexport default defaultFont;","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanelProps from './TabPanel';\nimport * as Classes from '../Classes';\nimport defaultFont from '../util/Font';\n\nconst NarwhalPanel: React.FunctionComponent<TabPanelProps> = (props: TabPanelProps) => {\n  const logo = require('../logo.svg');\n  const isShown = props.tabValue === props.selectedTab;\n  \n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      hidden={!isShown}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      {isShown ?\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Narwhal\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        : undefined\n      }\n    </Typography>\n  );\n}\n\nexport default NarwhalPanel;\n","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanelProps from './TabPanel';\nimport * as Classes from '../Classes';\nimport defaultFont from '../util/Font';\n\nconst ChatPanel: React.FunctionComponent<TabPanelProps> = (props: TabPanelProps) => {\n  const logo = require('../logo.svg');\n  const isShown = props.tabValue === props.selectedTab;\n  \n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      hidden={!isShown}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      {isShown ?\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Chat\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        : undefined\n      }\n    </Typography>\n  );\n}\n\nexport default ChatPanel;\n","import * as React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport defaultFont from '../util/Font';\nimport Person from '../util/Person';\n\ninterface UserProfileProps {\n  userToDisplay: Person\n}\n\ninterface UserProfileState {\n  isOpen: boolean,\n  anchorElement?: HTMLElement\n};\n\nclass UserProfile extends React.Component<UserProfileProps, UserProfileState> {\n  constructor(props: UserProfileProps) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      anchorElement: undefined\n    };\n  }\n\n  public render: () => JSX.Element = () => {\n    const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n      this.setState({\n        ...this.state,\n        isOpen: true,\n        anchorElement: event.currentTarget\n      });\n    };\n\n    const handleCloseMenu = () => {\n      this.setState({\n        ...this.state,\n        isOpen: false,\n        anchorElement: undefined\n      });\n    }\n\n    return (\n      <div\n        style={{\n          display: 'inline-flex',\n          paddingRight: '20px'\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{\n            fontFamily: defaultFont,\n            fontSize: '14px',\n            lineHeight: '36px',\n            color: '#000000',\n            mixBlendMode: 'normal',\n            opacity: 0.5,\n            paddingLeft: '22px'\n          }}\n        >\n          <b>Hello, {this.props.userToDisplay.name}</b>\n        </Typography>\n        <Avatar\n          alt={this.props.userToDisplay.name}\n          src={this.props.userToDisplay.avatar}\n          style={{\n            width: '36px',\n            height: '36px',\n            paddingLeft: '8px'\n          }}\n        />\n        <div\n          style={{\n            width: '36px',\n            height: '36px'\n          }}\n        >\n          <IconButton\n            onClick={handleOpenMenu}\n            style={{\n              width: '36px',\n              height: '36px'\n            }}\n          >\n            <ArrowDropDownIcon />\n          </IconButton>\n        </div>\n        \n        <Menu\n          anchorEl={this.state.anchorElement}\n          keepMounted={true}\n          open={this.state.isOpen}\n          onClose={handleCloseMenu}\n        >\n          <MenuItem onClick={handleCloseMenu}>Profile</MenuItem>\n          <MenuItem onClick={handleCloseMenu}>My account</MenuItem>\n          <MenuItem onClick={handleCloseMenu}>Logout</MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n};\n\nexport default UserProfile;","import * as React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\n\nimport PeopleIcon from '@material-ui/icons/People';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\n\nimport * as Classes from '../Classes';\nimport Team from '../util/Team';\nimport defaultFont from '../util/Font';\n\nexport interface TeamCardProps {\n  displayedTeam: Team,\n  handleFavourite: () => void,\n  key: number,\n}\n\nconst TeamCard: React.FunctionComponent<TeamCardProps> = (props: TeamCardProps) => {\n  const team: Team = props.displayedTeam;\n  return (\n    <Card\n      style={{\n        marginLeft: '6px',\n        marginRight: '6px',\n        marginTop: '8px',\n        width: '307px',\n        height: '181px',\n        border: '1.5px solid #e4e7ec',\n        boxShadow: 'unset'\n      }}\n      className={\n        team.isArchived\n          ? Classes.archivedTeam\n          : Classes.normalTeam\n      }\n    >\n      <div\n        style={{\n          position: 'relative',\n          display: 'inline-block',\n          width: '100%'\n        }}\n      >\n        <div\n          style={{\n            float: 'left',\n            width: '75%',\n            marginTop: '16px',\n            marginLeft: '16px',\n            marginRight: '16px'\n          }}\n        >\n          <Avatar\n            alt={props.displayedTeam.name}\n            variant=\"rounded\"\n            src={props.displayedTeam.iconSource}\n            style={{\n              float: 'left',\n              marginTop: '5px',\n              marginRight: '9px'\n            }}\n          />\n          <div>\n            <span\n              style={{\n                fontFamily: defaultFont,\n                fontSize: '16px',\n                lineHeight: '19px',\n                color: '#444444'\n              }}\n            >\n              <b>{team.name}</b>\n            </span>\n            <br />\n            <span\n              style={{\n                fontFamily: defaultFont,\n                fontSize: '13px',\n                color: '#565656',\n                opacity: 0.5,\n                mixBlendMode: 'normal'\n              }}\n            >\n              {team.createdAt ? 'Created ' + team.createdAt : undefined}\n            </span>\n          </div>\n        </div>\n        <div\n          onClick={props.handleFavourite}\n          style={{\n            float:'right',\n            marginTop: '16px',\n            marginRight: '16px'\n          }}\n        >\n          {team.isArchived\n            ? undefined\n            : (team.isFavourite\n              ? <StarRoundedIcon style={{ color:'#f8ce43' }} />\n              : <StarBorderRoundedIcon style={{ color:'#c7c7c7' }} />)\n          }\n        </div>\n      </div>\n      <br />\n      <div\n        style={{\n          marginLeft: '16px',\n          marginRight: '16px',\n          marginBottom: '8px'\n        }}\n      >\n        <span\n          style={{\n            wordWrap: 'break-word',\n            fontFamily: defaultFont,\n            fontSize: '14px',\n            color: '#565656',\n            display: '-webkit-box',\n            // truncate text to ellipsis after 3 lines\n            WebkitLineClamp: 3,\n            WebkitBoxOrient: 'vertical',\n            overflowY: 'hidden'\n          }}\n        >\n          {team.description}\n        </span>\n      </div>\n      <Divider />\n      <div\n        style={{\n          display: 'inline-flex',\n          position: 'relative',\n          top: '7px'\n        }}\n      >\n        <span\n          style={{\n            display: 'flex',\n            marginLeft: '16px'\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <QuestionAnswerIcon\n              style={{\n                color: '#000000',\n                opacity: 0.3,\n                marginRight: '6px'\n              }}\n            />\n          </div>\n          <span\n            style={{\n              lineHeight: '24px',\n              fontFamily: defaultFont,\n              fontSize: '13px',\n              color: '#000000',\n              mixBlendMode: 'normal',\n              opacity: 0.45\n            }}\n          >\n            {team.numberOfCampaigns}\n            {' Campaigns'}\n          </span>\n        </span>\n        <span\n          style={{\n            display: 'flex',\n            marginLeft: '16px'\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <PeopleIcon\n              style={{\n                color: '#000000',\n                opacity: 0.3,\n                marginRight: '6px'\n              }}\n            />\n          </div>\n          <span\n            style={{\n              lineHeight: '24px',\n              fontFamily: defaultFont,\n              fontSize: '13px',\n              color: '#000000',\n              mixBlendMode: 'normal',\n              opacity: 0.45\n            }}\n          >\n            {team.numberOfLeads}\n            {' Leads'}\n          </span>\n        </span>\n      </div>\n    </Card>\n  );\n};\n\nexport default TeamCard;\n","import * as React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport * as Classes from '../Classes';\nimport TeamCard from './TeamCard';\nimport { TeamPageTab } from './TeamsPage';\nimport Team from '../util/Team';\nimport defaultFont from '../util/Font';\n\nexport interface AllTeamsProps {\n  teamsToDisplay: Team[],\n  numberOfTotalTeams: number,\n  mode: TeamPageTab,\n  updateTeams: (newTeams: Team[]) => void,\n  searchTerm?: string\n}\n\n/**\n * Gets the title text for the current mode\n * \n * @param mode The mode of the All Teams\n * @param searchTerm The search term to be displayed\n *     when in search mode\n */\nfunction getTitle(mode: TeamPageTab, searchTerm?: string): string {\n  if (mode === TeamPageTab.all) {\n    return \"All Teams\";\n  } else if (mode === TeamPageTab.favourites) {\n    return \"Favourites\";\n  } else if (mode === TeamPageTab.archived) {\n    return \"Archived\";\n  } else if (mode === TeamPageTab.search && searchTerm) {\n    return \"Search: \" + searchTerm;\n  } else {\n    return \"? Teams\";\n  }\n}\n\nconst AllTeams: React.FunctionComponent<AllTeamsProps> = (props: AllTeamsProps) => {\n  // makes an unique function for handling favourites for each team\n  const createFavouriteHandler = (teamIndex: number) => {\n    const oldValue = props.teamsToDisplay[teamIndex].isFavourite;\n    const setFavouriteInTeamArray = (team: Team, index: number) =>\n      index === teamIndex\n        ? { ...team, isFavourite: !oldValue }\n        : team;\n    return () => props.updateTeams(props.teamsToDisplay.map(setFavouriteInTeamArray));\n  }\n\n  /**\n   * Constructs TeamCards given the team and original index (for setting favourite\n   * in the original array) and the actual index\n   * \n   * @param teamAndOriginalIndex An array containing team and original index\n   * @param index The current index in the filtered array\n   *     (only teams to be displayed)\n   */\n  const teamCardConstructor = (teamAndOriginalIndex: [Team, number], index: number) => {\n    const team = teamAndOriginalIndex[0];\n    const originalIndex = teamAndOriginalIndex[1];\n    return <TeamCard\n      displayedTeam={team}\n      key={index}\n      handleFavourite={createFavouriteHandler(originalIndex)}\n    />\n  };\n\n  function filterTeams() {\n    // keep the original index in a pair before filtering\n    // so createFavouriteHandler will know which index\n    // to set in the original array of TeamsPage\n    if (props.mode === TeamPageTab.favourites) {\n      return props.teamsToDisplay\n        .map((team, index) => [team, index] as [Team, number])\n        .filter(teamPair => teamPair[0].isFavourite)\n        .map(teamCardConstructor);\n    } else if (props.mode === TeamPageTab.archived) {\n      return props.teamsToDisplay\n        .map((team, index) => [team, index] as [Team, number])\n        .filter(teamPair => teamPair[0].isArchived)\n        .map(teamCardConstructor);\n    } else if (props.mode === TeamPageTab.search) {\n      return props.teamsToDisplay\n      .map((team, index) => [team, index] as [Team, number])\n      .filter(teamPair => {\n        const team = teamPair[0];\n        const search = props.searchTerm ? props.searchTerm.toLowerCase() : \"\";\n        return props.searchTerm\n          ? team.description.toLowerCase().includes(search) ||\n              team.name.toLowerCase().includes(search) ||\n              (team.createdAt && team.createdAt.toLowerCase().includes(search))\n          : true;\n      })\n      .map(teamCardConstructor);\n    } else {\n      return props.teamsToDisplay\n        .map((team, index) => [team, index] as [Team, number])\n        .map(teamCardConstructor);\n    }\n  }\n  const teamCards = filterTeams();\n\n  return (\n    <div\n      className={Classes.allTeams}\n      style={{\n        width: '75%',\n        marginLeft: '32px',\n        marginRight: '16px'\n      }}\n    >\n      <div style={{\n          display: 'inline-block', \n          position: 'relative',\n          width: '100%'\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{\n            float: 'left',\n            paddingTop: '25px',\n            paddingLeft: '25px',\n            paddingBottom: '17px',\n            fontFamily: defaultFont,\n            fontSize: '18px',\n            lineHeight: '22px'\n          }}\n        >\n          <b>{getTitle(props.mode, props.searchTerm)}</b>\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          style={{\n            float: 'right',\n            paddingTop: '25px',\n            paddingRight: '25px',\n            paddingBottom: '17px',\n            fontFamily: defaultFont,\n            fontSize: '14px',\n            lineHeight: '17px',\n            color: '#7f7f7f'\n          }}\n        >\n          Showing {teamCards.length} out of {props.numberOfTotalTeams} teams\n        </Typography>\n      </div>\n      <Divider\n        style={{\n          border: '1px solid #efefef',\n          height: '0px',\n          marginBottom: '20px'\n        }}\n      />\n      <div style={{\n        alignItems: 'center',\n        display: 'flex',\n        justifyContent: 'center'\n      }}>\n        <div style={{\n          display: 'flex', \n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          alignContent: 'space-between',\n          justifyContent: 'center'\n        }}>\n          {teamCards}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllTeams;","enum Action {\n  addedLeads = 'added_leads',\n  archivedTeam = 'archived_team',\n  increasedQuota = 'increased_quota'\n}\n\nexport default Action;","import * as React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\n\nimport Action from '../util/Action';\nimport Activity from '../util/Activity';\nimport defaultFont from '../util/Font';\nimport Person from '../util/Person';\n\nexport interface ActivityCardProps {\n  displayedActivity: Activity,\n  key: number\n}\n\n/**\n * Creates a span element containing an appropriate\n * message for the ActivityCard\n * \n * @param user The user that performed the action\n * @param action The action that was performed\n * @param team The team that the action was performed on\n */\nfunction createActivityMessage(user: Person, action: Action, team: String): JSX.Element {\n  let description: string = '';\n  let end: string = '';\n  if (action === Action.addedLeads) {\n    description = ' added new leads to ';\n    end = '.';\n  } else if (action === Action.archivedTeam) {\n    description = ' archived the team ';\n    end = '.';\n  } else if (action === Action.increasedQuota) {\n    description = ' increased ';\n    end = '\\'s quota.';\n  } else {\n    console.error('Unknown action in ActivityCard.tsx');\n  }\n  return (\n    <span\n      style={{\n        fontFamily: defaultFont,\n        fontSize: '14px',\n        lineHeight: '17px',\n        color: '#444444'\n      }}\n    >\n      <b>{user.name}</b>\n      {description}\n      <b>{team}</b>\n      {end}\n    </span>\n  );\n}\n\nconst ActivityCard: React.FunctionComponent<ActivityCardProps> = (props: ActivityCardProps) => {\n  const activity = props.displayedActivity;\n  return (\n    <Card style={{\n        borderRadius: 'unset',\n        boxShadow: 'unset',\n        marginTop: '4px',\n        marginBottom: '4px',\n        marginLeft: '30px'\n      }}\n    >\n      <table\n        style={{\n          width: '90%'\n        }}\n      >\n        <tbody>\n          <tr>\n            <td>\n              <span style={{ wordWrap: 'break-word' }}>\n                <Avatar\n                  src={activity.user.avatar}\n                  style={{\n                    float: 'left',\n                    marginRight: '9px'\n                  }}\n                />\n              </span>\n            </td>\n            <td\n              style={{\n                width: '80%'\n              }}\n            >\n              <span>\n                {createActivityMessage(activity.user, activity.action, activity.team)}                \n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td />\n            <td>\n              <span\n                style={{\n                  display: 'block',\n                  minWidth: '1px',\n                  minHeight: '21.6667px',\n                  color: '#565656',\n                  mixBlendMode: 'normal',\n                  opacity: 0.5,\n                  fontFamily: defaultFont,\n                  fontSize: '13px',\n                  lineHeight: '16px'\n                }}\n              >\n                {activity.createdAt || \"\"}\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </Card>\n  );\n};\n\nexport default ActivityCard;\n","import * as React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport AssignmentSharpIcon from '@material-ui/icons/AssignmentSharp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport UserProfile from './UserProfile';\nimport AllTeams from './AllTeams';\nimport Activity from './Activity';\nimport CreateTeamMenu from './CreateTeamMenu';\n\nimport AppData from '../util/AppData';\nimport renameKeys from '../util/DataRenamer';\nimport defaultFont from '../util/Font';\nimport Team from '../util/Team';\n\nimport ErrorScreen from '../panels/ErrorScreen';\nimport LoadingScreen from '../panels/LoadingScreen';\nimport * as Classes from '../Classes';\n\nexport enum TeamPageTab {\n  all = 'all',\n  favourites = 'favourites',\n  archived = 'archived',\n  search = 'search'\n}\n\ninterface TeamPageProps {\n  defaultTab: TeamPageTab;\n}\n\ninterface TeamPageState {\n  didLoadingFail: boolean,\n  loadProgress: number,\n  selectedTab: TeamPageTab,\n  data?: AppData,\n  teams?: Team[],\n  searchTerm?: string\n  previousTabBeforeSearch?: TeamPageTab\n  isCreateTeam: boolean\n}\n\nasync function loadJsonData(\n  updateProgress: (progress: number) => void,\n  updateData: (loadedData: AppData) => void\n): Promise<any> {\n  updateProgress(10);\n  try {\n    const response = await fetch('../sw-teams/data/data.json');\n    updateProgress(50);\n    const json = await response.json();\n    const loadedData = renameKeys(json) as AppData;\n    updateProgress(100);\n    updateData(loadedData);\n  } catch (e) {\n    updateProgress(0);\n    console.error(e);\n    throw new Error(\"Could not load JSON from file\");\n  }\n}\n\nclass TeamsPage extends React.Component<TeamPageProps, TeamPageState> {\n  constructor(props: TeamPageProps) {\n    super(props);\n    this.state = {\n      didLoadingFail: false,\n      loadProgress: 0,\n      selectedTab: this.props.defaultTab,\n      isCreateTeam: false \n    }\n  }\n\n  private handleUpdateTeams = (teams: Team[]) => {\n    this.setState((prevState: TeamPageState) => \n      prevState.data\n        ? ({ ...prevState,\n            data: {\n              activities: prevState.data.activities,\n              currentUser: prevState.data.currentUser,\n              teams\n            }})\n        : prevState\n    );\n  };\n\n  private handleChangeTab = (event: React.ChangeEvent<{}>, newValue: TeamPageTab) => {\n    this.setState({ ...this.state,  selectedTab: newValue });\n  };\n\n  private handleSearch = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const searchTerm: string = event.target.value;\n    if (searchTerm) {\n      this.setState(prevState => ({\n        ...prevState,\n        selectedTab: TeamPageTab.search,\n        searchTerm,\n        previousTabBeforeSearch: prevState.selectedTab === TeamPageTab.search\n          ? prevState.previousTabBeforeSearch\n          : prevState.selectedTab\n      }));\n    } else {\n      this.setState(prevState => ({\n        ...prevState,\n        selectedTab: prevState.previousTabBeforeSearch || this.props.defaultTab,\n        searchTerm: undefined\n      }));\n    }\n  };\n\n  private handleClearSearch = () => {\n    this.setState((prevState: TeamPageState) => ({\n      ...prevState,\n      searchTerm: \"\",\n      selectedTab: prevState.previousTabBeforeSearch || this.props.defaultTab\n    }));\n  }\n\n  /**\n   * Given an array of Teams, add a new Team to it and\n   * return the resultant array\n   */\n  private addNewTeam(teams: Team[], newTeam: Team) {\n    teams.unshift(newTeam);\n    return teams;\n  }\n\n  /**\n   * Adds a Team to the data in the state\n   */\n  private handleAddTeam = (newTeam: Team) => {\n    this.setState((prevState: TeamPageState) => ({\n      ...prevState,\n      isCreateTeam: false,\n      data: prevState.data\n        ? {\n            ...prevState.data,\n            teams: this.addNewTeam(prevState.data.teams, newTeam)\n          }\n        : undefined\n    }));\n  };\n\n  private openCreateTeamMenu = () => {\n    this.setState((prevState: TeamPageState) => ({\n      ...prevState,\n      isCreateTeam: true\n    }));\n  };\n\n  private closeCreateTeamMenu = () => {\n    this.setState((prevState: TeamPageState) => ({\n      ...prevState,\n      isCreateTeam: false\n    }));\n  };\n\n  private updateProgress = (progress: number): void => {\n    this.setState({ ...this.state, loadProgress: progress });\n  };\n\n  private updateData = (loadedData: AppData): void => {\n    this.setState({ ...this.state, data: loadedData })\n  };\n\n  public componentDidMount() {\n    loadJsonData(this.updateProgress, this.updateData)\n      .catch(error => {\n        console.error(error);\n        this.setState({ ...this.state, didLoadingFail: true })\n      });\n  }\n\n  // avoid error: type 'string' not assignable to type 'unset' | ...\n  private unset: 'unset' = 'unset';\n  private tabStyle = {\n    minWidth: 'unset',\n    marginLeft: '25px',\n    fontFamily: defaultFont,\n    fontSize: '18px',\n    fontWeight: 'bold' as 'bold',\n    lineHeight: '22px',\n    // disable all caps on tabs\n    textTransform: this.unset\n  };\n\n  public render() {\n    return this.state.data\n      ? <div className={Classes.teamsPage}>\n        <div className={Classes.teamsAllBars}>\n          <AppBar className={Classes.teamsTopBar}>\n            <div className={Classes.teamsTopWords}>\n              <div\n                style={{\n                  display: 'flex',\n                  height: '100%'\n                }}\n              >\n                <div\n                  style={{\n                    // give a line between Narwhal and Teams\n                    borderRight: '1px solid #e2e2e2',\n                    paddingLeft: '40px',\n                    paddingRight: '40px',\n                    paddingTop: '30px',\n                    paddingBottom: '30px'\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      fontFamily: defaultFont,\n                      fontSize: '18px',\n                      lineHeight: '22px',\n                      color: '#1a1919',\n                      mixBlendMode: 'normal',\n                      opacity: 0.5\n                    }}\n                  >\n                    <b>NARWHAL</b>\n                  </Typography>\n                </div>\n                <div\n                  style={{\n                    paddingLeft: '40px',\n                    paddingTop: '30px'\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    style={{\n                      fontFamily: defaultFont,\n                      fontSize: '18px',\n                      lineHeight: '22px',\n                      color: '#000000'\n                    }}\n                  >\n                    Teams\n                  </Typography>\n                </div>\n              </div>\n            </div>\n            <div className={Classes.teamsTopUser}>\n              <div>\n                <IconButton>\n                  <Badge badgeContent={this.state.data.currentUser.notificationsCount}>\n                    <AssignmentSharpIcon\n                      style={{\n                        width: '36px',\n                        height: '36px'\n                      }}\n                    />\n                  </Badge>\n                </IconButton>\n                <UserProfile userToDisplay={this.state.data.currentUser} />\n              </div>\n            </div>\n          </AppBar>\n          <AppBar className={Classes.teamsCreateBar}>\n            <div className={Classes.teamsCreateBarIcon}>\n              <LocationCityIcon\n                style={{\n                  fontSize: '35px',\n                  color: '#a4a6a8',\n                  marginRight: '9px',\n                  paddingTop: '2px'\n                }}\n              />\n              <Typography\n                variant=\"h6\"\n                style={{\n                  fontFamily: defaultFont,\n                  fontSize: '30px',\n                  lineHeight: '36px',\n                  color: '#1a1919'\n                }}\n              >\n                <b>Teams</b>\n              </Typography>\n            </div>\n            <div className={Classes.teamsCreateATeam}>\n              <Button\n                variant=\"contained\"\n                onClick={this.openCreateTeamMenu}\n                style={{\n                  fontFamily: defaultFont,\n                  fontSize: '14px',\n                  lineHeight: '16px'\n                }}\n              >\n                <AddIcon style={{ paddingRight: '5px' }} />\n                <b>Create New Team</b>\n              </Button>\n            </div>\n          </AppBar>\n          <AppBar className={Classes.teamsTabBar}>\n            <div className={Classes.teamsTabs}>\n              {this.state.selectedTab === TeamPageTab.search\n                ? undefined\n                : <Tabs\n                    value={this.state.selectedTab}\n                    onChange={this.handleChangeTab}\n                    TabIndicatorProps={{\n                      style: {\n                        backgroundColor: '#0083e3'\n                      } \n                    }}\n                  >\n                    <Tab value={TeamPageTab.all} label=\"All\" style={this.tabStyle} />\n                    <Tab value={TeamPageTab.favourites} label=\"Favourites\" style={this.tabStyle} />\n                    <Tab value={TeamPageTab.archived} label=\"Archived\" style={this.tabStyle} />\n                  </Tabs>\n              }\n            </div>\n            <div className={Classes.teamsSearch}>\n              <div\n                style={{\n                  display: 'inline-flex'\n                }}\n              >\n                {this.state.selectedTab === TeamPageTab.search\n                  ? <div style={{\n                      float: 'right',\n                      height: '48px',\n                      paddingRight: '10px'\n                    }}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={this.handleClearSearch}\n                        style={{\n                          fontFamily: defaultFont,\n                          backgroundColor: '#ba1029',\n                          color: '#ffffff',\n                          boxShadow: 'unset',\n                          paddingLeft: '9px',\n                          paddingRight: '11px'\n                        }}\n                      >\n                        <CloseIcon style={{ paddingRight: '5px' }} />\n                        <div style={{ paddingBottom: '1px' }}>\n                          <b>Clear</b>\n                        </div>\n                      </Button>\n                    </div>\n                  : undefined\n                }\n                <div\n                  style={{\n                    color: '#999999',\n                    marginRight: '15px',\n                    paddingTop: '7px'\n                  }}\n                >\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  placeholder=\"Search team name…\"\n                  onChange={this.handleSearch}\n                  value={this.state.searchTerm}\n                  style={{\n                    fontFamily: defaultFont,\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    lineHeight: '19px',\n                    color: '#999999',\n                    height: '36.3333px'\n                  }}\n                />\n              </div>\n            </div>\n          </AppBar>\n        </div>\n        <div className={Classes.teamsMain}>\n          <AllTeams\n            mode={this.state.selectedTab}\n            teamsToDisplay={this.state.data.teams}\n            numberOfTotalTeams={this.state.data.teams.length}\n            updateTeams={this.handleUpdateTeams}\n            searchTerm={this.state.searchTerm}\n          />\n          <Activity activitiesToDisplay={this.state.data.activities} />\n        </div>\n        <CreateTeamMenu\n          handleCloseMenu={this.closeCreateTeamMenu}\n          handleCreateTeam={this.handleAddTeam}\n          hidden={!this.state.isCreateTeam}\n          numberOfTeams={this.state.data.teams.length}\n        />\n      </div>\n    : this.state.didLoadingFail\n      ? <ErrorScreen />\n      : <LoadingScreen progress={this.state.loadProgress} />\n  }\n};\n\nexport default TeamsPage;","import * as React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport * as Classes from '../Classes';\nimport ActivityCard from './ActivityCard';\nimport ActivityItem from '../util/Activity';\nimport defaultFont from '../util/Font';\n\ninterface ActivityProps {\n  activitiesToDisplay: ActivityItem[]\n}\n\nconst Activity: React.FunctionComponent<ActivityProps> = (props: ActivityProps) => {\n  const activityCardConstructor = (activity: ActivityItem, index: number) => {\n    return <ActivityCard\n      key={index}\n      displayedActivity={activity}\n    />\n  };\n  const activityCards = props.activitiesToDisplay.map(activityCardConstructor);\n\n  return (\n    <div\n      className={Classes.allTeams}\n      style={{\n        width: '25%',\n        marginLeft: '16px',\n        marginRight: '32px'\n      }}\n    >\n      <div style={{\n          display: 'inline-block', \n          position: 'relative',\n          width: '100%'\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{\n            float: 'left',\n            paddingTop: '25px',\n            paddingLeft: '25px',\n            paddingBottom: '17px',\n            fontFamily: defaultFont,\n            fontSize: '18px',\n            lineHeight: '22px'\n          }}\n        >\n          <b>Activity</b>\n        </Typography>\n      </div>\n      <Divider\n        style={{\n          border: '1px solid #efefef',\n          height: '0px',\n          marginBottom: '20px'\n        }}\n      />\n      <div>\n        {activityCards}\n      </div>\n    </div>\n  );\n};\n\nexport default Activity;","import * as React from 'react';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Team from '../util/Team';\nimport defaultFont from '../util/Font';\nimport * as Classes from '../Classes';\n\ninterface CreateTeamMenuProps {\n  handleCloseMenu: () => void,\n  handleCreateTeam: (team: Team) => void,\n  hidden: boolean,\n  numberOfTeams: number\n}\n\ninterface CreateTeamMenuState {\n  createdAt: string,\n  description: string,\n  iconSource: string,\n  isFavourite: boolean,\n  isArchived: boolean,\n  name: string,\n  numberOfCampaigns: number,\n  numberOfLeads: number,\n  hasTriedToSubmit: boolean\n}\n\nclass CreateTeamMenu extends React.Component<CreateTeamMenuProps, CreateTeamMenuState> {\n  private clearState: CreateTeamMenuState = {\n    createdAt: \"\",\n    description: \"\",\n    iconSource: \"\",\n    isFavourite: false,\n    isArchived: false,\n    name: \"\",\n    numberOfCampaigns: 0,\n    numberOfLeads: 0,\n    hasTriedToSubmit: false\n  };\n\n  constructor(props: CreateTeamMenuProps) {\n    super(props);\n    this.state = Object.assign({}, this.clearState);\n  }\n\n  private handleSubmit = () => {\n    if (this.state.description && this.state.iconSource && this.state.name) {\n      const newTeam: Team = {\n        createdAt: this.state.createdAt || undefined,\n        description: this.state.description,\n        iconSource: this.state.iconSource,\n        id: this.props.numberOfTeams + 1,\n        isFavourite: this.state.isFavourite,\n        isArchived: this.state.isArchived,\n        name: this.state.name,\n        numberOfCampaigns: this.state.numberOfCampaigns,\n        numberOfLeads: this.state.numberOfLeads\n      };\n      this.props.handleCreateTeam(newTeam);\n      // clear all fields\n      this.setState(Object.assign({}, this.clearState));\n    } else {\n      this.setState((prevState : CreateTeamMenuState) => ({\n        ...prevState,\n        hasTriedToSubmit: true\n      }));\n    }\n  };\n\n  private handleChangeText = (name: string) =>\n    (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const newValue: string = event.target.value;\n      this.setState((prevState : CreateTeamMenuState) => ({\n        ...prevState,\n        [name]: newValue\n      }));\n    };\n  \n  private handleChangeBoolean = (name: string) =>\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue: boolean = event.target.checked;\n      this.setState((prevState : CreateTeamMenuState) => ({\n        ...prevState,\n        [name]: newValue\n      }));\n    };\n  \n  private handleChangeNumber = (name: string) =>\n    (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const newValue: number = parseInt(event.target.value);\n      this.setState((prevState : CreateTeamMenuState) => ({\n        ...prevState,\n        [name]: isNaN(newValue)\n          ? 0\n          : newValue\n      }));\n    };\n\n  public render() {\n    return (\n      <Backdrop\n        open={!this.props.hidden}\n        style={{\n          zIndex: 6000\n        }}\n      >\n        <div\n          className={Classes.createTeamMenu}\n          style={{\n            backgroundColor: '#ffffff'\n          }}\n        >\n          <table\n            style={{\n              borderSpacing: '20px',\n              marginLeft: '-20px',\n              marginTop: '-20px',\n              marginRight: '-10px'\n            }}\n          >\n            <tbody>\n              <tr>\n                <td>\n                  <IconButton onClick={this.props.handleCloseMenu}>\n                    <CloseIcon />\n                  </IconButton>\n                </td>\n                <td colSpan={2}>\n                  <span\n                    style={{\n                      fontFamily: defaultFont,\n                      fontSize: '18px',\n                      color: '#565656'\n                    }}\n                  >\n                    <b>Create A Team</b>\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td />\n                <td>\n                  <TextField\n                    label='Name'\n                    value={this.state.name}\n                    onChange={this.handleChangeText('name')}\n                    error={this.state.hasTriedToSubmit && !this.state.name}\n                  />\n                </td>\n                <td>\n                  <TextField\n                    label='Description'\n                    value={this.state.description}\n                    onChange={this.handleChangeText('description')}\n                    error={this.state.hasTriedToSubmit && !this.state.description}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td />\n                <td>\n                  <TextField\n                    label='Icon URL'\n                    value={this.state.iconSource}\n                    onChange={this.handleChangeText('iconSource')}\n                    error={this.state.hasTriedToSubmit && !this.state.iconSource}\n                  />\n                </td>\n                <td>\n                  <TextField\n                    label='Created at (optional)'\n                    value={this.state.createdAt}\n                    onChange={this.handleChangeText('createdAt')}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td />\n                <td>\n                  <FormGroup>\n                    <FormControlLabel\n                      control={<Checkbox\n                        checked={this.state.isFavourite}\n                        onChange={this.handleChangeBoolean('isFavourite')}\n                      />}\n                      label='Favourite'\n                    />\n                    <FormControlLabel\n                      control={<Checkbox\n                        checked={this.state.isArchived}\n                        onChange={this.handleChangeBoolean('isArchived')}\n                      />}\n                      label='Archived'\n                    />\n                  </FormGroup>\n                </td>\n                <td>\n                  <TextField\n                    label='Number of campaigns'\n                    type='number'\n                    value={this.state.numberOfCampaigns}\n                    onChange={this.handleChangeNumber('numberOfCampaigns')}\n                  />\n                  <br />\n                  <TextField\n                    label='Number of leads'\n                    type='number'\n                    value={this.state.numberOfLeads}\n                    onChange={this.handleChangeNumber(\"numberOfLeads\")}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td colSpan={3} style={{ textAlign: 'right' }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleSubmit}\n                    style={{\n                      fontFamily: defaultFont,\n                      backgroundColor: '#40d2bf',\n                      boxShadow: 'unset'\n                    }}\n                  >\n                    <b>Submit</b>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Backdrop>\n    );\n  }\n}\n\nexport default CreateTeamMenu;","interface Keys {\n  action: any,\n  activities: any[],\n  avatar: any,\n  createdAt: any,\n  currentUser: any,\n  description: any,\n  iconSource: any,\n  id: any,\n  isArchived: any,\n  isFavourite: any,\n  name: any,\n  notificationsCount: any,\n  numberOfCampaigns: any,\n  numberOfLeads: any,\n  team: any,\n  teams: any[],\n  user: any,\n}\n\nconst keysMap = {\n  action: 'action',\n  activities: 'activities',\n  avatar: 'avatar',\n  campaigns_count: 'numberOfCampaigns',\n  created_at: 'createdAt',\n  description: 'description',\n  id: 'id',\n  image: 'iconSource',\n  is_archived: 'isArchived',\n  is_favorited: 'isFavourite',\n  leads_count: 'numberOfLeads',\n  name: 'name',\n  notifications_count: 'notificationsCount',\n  person: 'user',\n  target: 'team',\n  teams: 'teams',\n  current_user: 'currentUser'\n};\n\nconst renameKeys = (rawData: any) => {\n  const renamedObject = {} as Partial<Keys>;\n  const oldKeys = Object.keys(rawData) as (keyof typeof keysMap)[];\n  for (let i = 0; i < oldKeys.length; i++) {\n    const currentKey = oldKeys[i];\n    if (currentKey in rawData) {\n      // need to rename this\n\n      const newKey = keysMap[currentKey] as keyof Partial<Keys>;\n      if (rawData[currentKey] instanceof Array) {\n        // rename each item in the array\n        const array = rawData[currentKey] as any[];\n        const newArray = [] as any[];\n        renamedObject[newKey] = newArray;\n        \n        for (let i = 0; i < array.length; i++) {\n          newArray[i] = renameKeys(array[i]);\n        }\n\n      } else if (rawData[currentKey] instanceof Object) {\n        // rename the item here\n        renamedObject[newKey] = {} as Partial<Keys>;\n        Object.assign(renamedObject[newKey], renameKeys(rawData[currentKey]));\n\n      } else {\n        renamedObject[newKey] = rawData[currentKey];\n      }\n    }\n  }\n  return renamedObject;\n}\n\nexport default renameKeys;","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport * as Classes from '../Classes';\nimport defaultFont from '../util/Font';\n\nconst ErrorScreen: React.FunctionComponent<{}> = () => {\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      <header className={Classes.loadingScreen}>\n        <p>\n          Failed to load data :(\n        </p>\n      </header>\n    </Typography>\n  );\n}\n\nexport default ErrorScreen;\n","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport * as Classes from '../Classes';\nimport defaultFont from '../util/Font';\n\nexport interface LoadingScreenProps {\n  progress: number\n}\n\nconst LoadingScreen: React.FunctionComponent<LoadingScreenProps> = (props: LoadingScreenProps) => {\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      <header className={Classes.loadingScreen}>\n        <CircularProgress\n          color='inherit'\n          variant=\"determinate\"\n          value={props.progress}\n          size='20%'\n          thickness={5.0}\n        />\n        <p>\n          Loading...\n        </p>\n      </header>\n    </Typography>\n  );\n}\n\nexport default LoadingScreen;\n","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanelProps from './TabPanel';\nimport * as Classes from '../Classes';\nimport TeamsPage, { TeamPageTab } from '../pages/TeamsPage';\nimport defaultFont from '../util/Font';\n\nconst TeamsPanel: React.FunctionComponent<TabPanelProps> = (props: TabPanelProps) => {\n  const isShown = props.tabValue === props.selectedTab;\n  \n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      hidden={!isShown}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      {isShown\n        ? <TeamsPage defaultTab={TeamPageTab.all} />\n        : undefined\n      }\n    </Typography>\n  );\n}\n\nexport default TeamsPanel;\n","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanelProps from './TabPanel';\nimport * as Classes from '../Classes';\nimport defaultFont from '../util/Font';\n\nconst PeoplePanel: React.FunctionComponent<TabPanelProps> = (props: TabPanelProps) => {\n  const logo = require('../logo.svg');\n  const isShown = props.tabValue === props.selectedTab;\n  \n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      hidden={!isShown}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      {isShown ?\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            People\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        : undefined\n      }\n    </Typography>\n  );\n}\n\nexport default PeoplePanel;\n","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanelProps from './TabPanel';\nimport * as Classes from '../Classes';\nimport defaultFont from '../util/Font';\n\nconst StatisticsPanel: React.FunctionComponent<TabPanelProps> = (props: TabPanelProps) => {\n  const logo = require('../logo.svg');\n  const isShown = props.tabValue === props.selectedTab;\n  \n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      className={Classes.tabPanel}\n      hidden={!isShown}\n      style={{\n        fontFamily: defaultFont\n      }}\n    >\n      {isShown ?\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Statistics\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        : undefined\n      }\n    </Typography>\n  );\n}\n\nexport default StatisticsPanel;\n","import * as React from 'react';\nimport './App.css';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\n\nimport HelpIcon from '@material-ui/icons/Help';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport PeopleIcon from '@material-ui/icons/People';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport TrendingUpRoundedIcon from '@material-ui/icons/TrendingUpRounded';\n\nimport * as Classes from './Classes';\nimport TabType from './TabType';\nimport NarwhalPanel from './panels/NarwhalPanel';\nimport ChatPanel from './panels/ChatPanel';\nimport TeamsPanel from './panels/TeamsPanel';\nimport PeoplePanel from './panels/PeoplePanel';\nimport StatisticsPanel from './panels/StatisticsPanel';\nimport defaultFont from './util/Font';\n\nimport whaleLogo from './sw-logo-white.svg';\n\ninterface AppState {\n  selectedTab: TabType\n  isBackdropOpen: boolean\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedTab: TabType.teams,\n      isBackdropOpen: false\n    }\n  }\n\n  private handleTabChange = (event: React.ChangeEvent<{}>, newValue: TabType) => {\n    this.setState({ ...this.state,  selectedTab: newValue });\n  };\n\n  private handleHelpButtonClick = () => {\n    this.setState({ ...this.state,  isBackdropOpen: true });\n  };\n\n  private handleOverlayClose = () => {\n    this.setState({ ...this.state,  isBackdropOpen: false });\n  };\n\n  public render() {\n    return (\n      <div className={Classes.app}>\n        <div className={Classes.tabs}>\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedTab}\n            onChange={this.handleTabChange}\n            // hide default tab indicator line\n            TabIndicatorProps={{ style: { display: 'none' } }}\n          >\n            <Tab\n              value={TabType.narwhal}\n              icon={\n                <Icon\n                  style={{\n                    display: 'flex'\n                  }}\n                >\n                  <img\n                    src={whaleLogo}\n                    alt='whale'\n                    style={{\n                      width: '24px'\n                    }}\n                  />\n                </Icon>\n              } aria-label='narwhal'\n            />\n            <Tab value={TabType.chat} icon={<QuestionAnswerIcon />} aria-label='chat' />\n            <Tab value={TabType.teams} icon={<LocationCityIcon />} aria-label='teams' />\n            <Tab value={TabType.people} icon={<PeopleIcon />} aria-label='people' />\n            <Tab value={TabType.statistics} icon={<TrendingUpRoundedIcon />} aria-label='statistics' />\n\n            <IconButton\n              id={Classes.helpIcon}\n              onClick={this.handleHelpButtonClick}\n            >\n              <HelpIcon />\n            </IconButton>\n          </Tabs>\n\n          <NarwhalPanel tabValue={TabType.narwhal} selectedTab={this.state.selectedTab} />\n          <ChatPanel tabValue={TabType.chat} selectedTab={this.state.selectedTab} />\n          <TeamsPanel tabValue={TabType.teams} selectedTab={this.state.selectedTab} />\n          <PeoplePanel tabValue={TabType.people} selectedTab={this.state.selectedTab} />\n          <StatisticsPanel tabValue={TabType.statistics} selectedTab={this.state.selectedTab} />\n        </div>\n\n        <Backdrop\n          id={Classes.backdrop}\n          open={this.state.isBackdropOpen}\n          onClick={this.handleOverlayClose}\n        >\n          <div\n            style={{\n              backgroundColor: '#ffffff',\n              width: '30%',\n              height: '200px'\n            }}\n          >\n            <Typography\n              style={{\n                fontFamily: defaultFont,\n                fontSize: '32px',\n                lineHeight: '100px',\n                textAlign: 'center'\n              }}\n            >\n              <b>Help Page</b>\n            </Typography>\n            <Typography\n              style={{\n                fontFamily: defaultFont,\n                fontSize: '24px',\n                lineHeight: '100px',\n                textAlign: 'center'\n              }}\n            >\n              Click anywhere to close\n            </Typography>\n          </div>\n        </Backdrop>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/sw-logo-white.6a5c384b.svg\";"],"sourceRoot":""}